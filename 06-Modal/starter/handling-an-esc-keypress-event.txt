
----- > HOW TO HANDLE KEYPRESS EVENTS 


In order to listen for keyboard events we still need to use add event listener 
because the keypress event is simply just another type of event

- KEYBOARD EVENTS ARE SO CALLED GLOBAL EVENTS BECAUSE THEY DO NOT HAPPEN ON ONE SPECIFIC ELEMENT 
- AND FOR GLOBAL EVENTS LIKE KEYBOARD EVENTS WE USUALLY LIST THEM ON THE WHOLE DOCUMENT 

DOCUMENT JUST LIKE IN DOCUMENT.querySelector IS JUST A BIG OBJECT THAT CONTAINS A BUNCH OF METHODS FOR ALL KIND OF STUFF 
AND THAT INCLUDES THE ADD EVENT LISTENER METHOD 

document.addEventListener -> we are basically listening for events everywhere

ABOUT THE NAME OF THE EVENT ITSELF THERE ARE ACTUALLY THREE TYPES OF EVENTS FOR THE KEYBOARD:

1. THE KEY DOWN  - KEY DOWN IS FIRED AS SOON AS WE JUS PRESS DOWN THE KEY
2. THE KEY PRESS - FIRED CONTINUOUSLY AS WE KEEP OUR FINGER ON A CERTAIN KEY 
3. THE KEY UP - THIS ONE ONLY HAPPENS WHEN WE LIFT OUR FINGER OFF THE KEYBOARD BASICALLY, OR OFF THE KEY 


document.addEventListener('keydown', function () {
  console.log('a key was pressed');
}); 


- HOW WOULD WE KNOW WHICH KEY WAS ACTUALLY PRESSED IF THIS EVENT HAPPENS FOR ALL OF THE KEYS?  
    THE INFORMATION ABOUT WHICH KEY WAS PRESSED WILL BE STORED IN THE EVENT THAT IS GOING TO OCCUR AS SOON AS ANY KEY IS PRESSED 
    EVERYTIME THAT AN EVENT LIKE THIS OCCURS JS DOES IN FACT GENERATE AN OBJECT - AND THAT OBJECT CONTAINS ALL THE INFORMATION ABOUT THE EVENT ITSELF AND WE CAN THEN ACTUALLY ACCESS THAT 
    OBJECT IN THE EVENT HANDLER FUNCTION 

    BUT HOW DO WE DO THAT??????? WE JUST GIVE THE FUNCTION A PARAMETER (E) - STANDS FOR EVENT 


so as soon as the event occurs js will call this function with the event object as an argument - THIS WORKS BECAUSE WE DO NOT CALL THIS FUNCTION BY OURSELVES

-> WE DO NOT CALL THE FUNCION WE ONLY DEFINE IT HERE 

--- IT GENERATES AN OBJECT KEYBOARDEVENT::: KeyboardEvent {isTrusted: true, key: 'h', code: 'KeyH', location: 0, ctrlKey: false, …}

acess the object property: e.key 